[{
    "title": "Article #1",
    "body": "Here, we are first generating the file structure for a basic web application and then writing a number of boilerplate files for a new AngularJS application on top of it. This includes boilerplate directives and controllers as well as scaffolded Karma unit tests. Scaffolding out your Angular app’s pieces Some generators can also be used to scaffold further pieces of your application - we call these sub-generators. In the AngularJS framework, for example, your application is made up of a number of pieces including controllers, directives and filters. You can actually scaffold out any of these pieces (and more) during your development workflow as shown below:",
    "author": "Name Surname",
    "image": "",
    "date": "2014-10-06T11:48:55.055Z"
},
{
    "title": "Article #2",
    "body": "Here, we are first generating the file structure for a basic web application and then writing a number of boilerplate files for a new AngularJS application on top of it. This includes boilerplate directives and controllers as well as scaffolded Karma unit tests. Scaffolding out your Angular app’s pieces Some generators can also be used to scaffold further pieces of your application - we call these sub-generators. In the AngularJS framework, for example, your application is made up of a number of pieces including controllers, directives and filters. You can actually scaffold out any of these pieces (and more) during your development workflow as shown below:",
    "author": "Name2 Surname2",
    "image": "",
    "date": "2014-10-06T11:48:55.055Z"
},
{
    "title": "Article #3",
    "body": "Here, we are first generating the file structure for a basic web application and then writing a number of boilerplate files for a new AngularJS application on top of it. This includes boilerplate directives and controllers as well as scaffolded Karma unit tests. Scaffolding out your Angular app’s pieces Some generators can also be used to scaffold further pieces of your application - we call these sub-generators. In the AngularJS framework, for example, your application is made up of a number of pieces including controllers, directives and filters. You can actually scaffold out any of these pieces (and more) during your development workflow as shown below:",
    "author": "Name3 Surname3",
    "image": "",
    "date": "2014-10-06T11:48:55.055Z"
},
{
    "title": "Article #4",
    "body": "Here, we are first generating the file structure for a basic web application and then writing a number of boilerplate files for a new AngularJS application on top of it. This includes boilerplate directives and controllers as well as scaffolded Karma unit tests. Scaffolding out your Angular app’s pieces Some generators can also be used to scaffold further pieces of your application - we call these sub-generators. In the AngularJS framework, for example, your application is made up of a number of pieces including controllers, directives and filters. You can actually scaffold out any of these pieces (and more) during your development workflow as shown below:",
    "author": "Name4 Surname4",
    "image": "",
    "date": "2014-10-06T11:48:55.055Z"
}]